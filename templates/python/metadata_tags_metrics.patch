diff --git a/python/docs/ModelMetadataServiceApi.md b/python/docs/ModelMetadataServiceApi.md
index b257b08..3da9999 100644
--- a/python/docs/ModelMetadataServiceApi.md
+++ b/python/docs/ModelMetadataServiceApi.md
@@ -140,6 +140,8 @@ version = 'version_example' # str |  (optional)
 artifact_type = 'UNKNOWN' # str |  (optional) (default to UNKNOWN)
 task_type = 'task_type_example' # str |  (optional)
 model_type = 'model_type_example' # str |  (optional)
+tags = {"tag_key_example": "tag_value_example"} # dict |  (optional)
+metrics = {"metric_key_example": 123} # dict |  (optional)
 query = 'query_example' # str | For more complex queries where other logical operators like OR, NOT, etc. (optional)
 page_size = 56 # int | Optional. The maximum number of Folders to return in the response. (optional)
 page_token = 'page_token_example' # str | Optional. A pagination token returned from a previous call to `List` that indicates where this listing should continue from. (optional)
@@ -150,7 +152,7 @@ default_protocol = 'PROTOCOL_UNKNOWN' # str |  (optional) (default to PROTOCOL_U
 
 try:
     # List Model Metadata entries.
-    api_response = api_instance.model_metadata_service_list_model_metadata(uri=uri, name=name, version=version, artifact_type=artifact_type, task_type=task_type, model_type=model_type, query=query, page_size=page_size, page_token=page_token, list_mask=list_mask, project=project, order_by=order_by, default_protocol=default_protocol)
+    api_response = api_instance.model_metadata_service_list_model_metadata(uri=uri, name=name, version=version, artifact_type=artifact_type, task_type=task_type, model_type=model_type, tags=tags, metrics=metrics, query=query, page_size=page_size, page_token=page_token, list_mask=list_mask, project=project, order_by=order_by, default_protocol=default_protocol)
     pprint(api_response)
 except ApiException as e:
     print("Exception when calling ModelMetadataServiceApi->model_metadata_service_list_model_metadata: %s\n" % e)
@@ -166,6 +168,8 @@ Name | Type | Description  | Notes
  **artifact_type** | **str**|  | [optional] [default to UNKNOWN]
  **task_type** | **str**|  | [optional] 
  **model_type** | **str**|  | [optional] 
+ **tags** | **dict**|  | [optional]
+ **metrics** | **dict**|  | [optional]
  **query** | **str**| For more complex queries where other logical operators like OR, NOT, etc. | [optional] 
  **page_size** | **int**| Optional. The maximum number of Folders to return in the response. | [optional] 
  **page_token** | **str**| Optional. A pagination token returned from a previous call to &#x60;List&#x60; that indicates where this listing should continue from. | [optional] 
diff --git a/python/seldon_deploy_sdk/api/model_metadata_service_api.py b/python/seldon_deploy_sdk/api/model_metadata_service_api.py
index 312e067..47adb43 100644
--- a/python/seldon_deploy_sdk/api/model_metadata_service_api.py
+++ b/python/seldon_deploy_sdk/api/model_metadata_service_api.py
@@ -247,6 +247,8 @@ class ModelMetadataServiceApi(object):
         :param str artifact_type:
         :param str task_type:
         :param str model_type:
+        :param dict tags:
+        :param dict metrics:
         :param str query: For more complex queries where other logical operators like OR, NOT, etc.
         :param int page_size: Optional. The maximum number of Folders to return in the response.
         :param str page_token: Optional. A pagination token returned from a previous call to `List` that indicates where this listing should continue from.
@@ -281,6 +283,8 @@ class ModelMetadataServiceApi(object):
         :param str artifact_type:
         :param str task_type:
         :param str model_type:
+        :param dict tags:
+        :param dict metrics:
         :param str query: For more complex queries where other logical operators like OR, NOT, etc.
         :param int page_size: Optional. The maximum number of Folders to return in the response.
         :param str page_token: Optional. A pagination token returned from a previous call to `List` that indicates where this listing should continue from.
@@ -293,7 +297,7 @@ class ModelMetadataServiceApi(object):
                  returns the request thread.
         """
 
-        all_params = ['uri', 'name', 'version', 'artifact_type', 'task_type', 'model_type', 'query', 'page_size', 'page_token', 'list_mask', 'project', 'order_by', 'default_protocol']  # noqa: E501
+        all_params = ['uri', 'name', 'version', 'artifact_type', 'task_type', 'model_type', 'tags', 'metrics', 'query', 'page_size', 'page_token', 'list_mask', 'project', 'order_by', 'default_protocol']  # noqa: E501
         all_params.append('async_req')
         all_params.append('_return_http_data_only')
         all_params.append('_preload_content')
@@ -326,6 +330,12 @@ class ModelMetadataServiceApi(object):
             query_params.append(('taskType', params['task_type']))  # noqa: E501
         if 'model_type' in params:
             query_params.append(('modelType', params['model_type']))  # noqa: E501
+        if 'tags' in params:
+            for key, val in params['tags'].items():
+                query_params.append((f'tags[{key}]', val))
+        if 'metrics' in params:
+            for key, val in params['metrics'].items():
+                query_params.append((f'metrics[{key}]', val))
         if 'query' in params:
             query_params.append(('query', params['query']))  # noqa: E501
         if 'page_size' in params:
